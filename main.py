import os
import asyncio
import threading
from flask import Flask
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes

# Flask –¥–ª—è Render
web_app = Flask(__name__)

@web_app.route('/')
def home():
    return '‚úÖ Flask —Ä–∞–±–æ—Ç–∞–µ—Ç. Telegram-–±–æ—Ç —Ç–æ–∂–µ.'

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def get_main_menu():
    keyboard = [
        [InlineKeyboardButton("üì® –†–∞–∑–º–µ—Å—Ç–∏—Ç—å –ó–∞–∫–∞–∑", callback_data='create_order')],
        [InlineKeyboardButton("üìÅ –ù–∞–π—Ç–∏ –ó–∞–∫–∞–∑. –ö–∞—Ç–µ–≥–æ—Ä–∏–∏", callback_data='find_order')],
        [InlineKeyboardButton("üîß –†–µ—Å—É—Ä—Å—ã: –ê—Ä–µ–Ω–¥–∞. –ü—Ä–æ–∫–∞—Ç. –†–∞–±–æ—á–∏–µ.", callback_data='resources')],
        [InlineKeyboardButton("ü§ù –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞", callback_data='referral')],
        [InlineKeyboardButton("‚ùì –í–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã", callback_data='faq')],
        [InlineKeyboardButton("üë• –°–ª—É–∂–±–∞ –∑–∞–±–æ—Ç—ã", callback_data='support')],
    ]
    return InlineKeyboardMarkup(keyboard)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é:", reply_markup=get_main_menu())

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
async def handle_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    await query.edit_message_text(f"–í—ã –≤—ã–±—Ä–∞–ª–∏: {query.data}")

# Telegram –±–æ—Ç
async def run_bot():
    token = os.getenv("BOT_TOKEN")
    if not token:
        print("‚ùå –ù–µ –∑–∞–¥–∞–Ω BOT_TOKEN")
        return

    app = Application.builder().token(token).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(handle_menu))

    print("ü§ñ Telegram-–±–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    await app.run_polling()

# Flask-—Å–µ—Ä–≤–µ—Ä –≤ —Ñ–æ–Ω–æ–≤–æ–º –ø–æ—Ç–æ–∫–µ
def run_flask():
    port = int(os.environ.get("PORT", 10000))
    web_app.run(host="0.0.0.0", port=port)

# –°—Ç–∞—Ä—Ç
if __name__ == '__main__':
    threading.Thread(target=run_flask).start()
    asyncio.run(run_bot())
