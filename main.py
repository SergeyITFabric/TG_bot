import os
import asyncio
import threading
from flask import Flask
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes

web_app = Flask(__name__)

@web_app.route('/')
def home():
    return '‚úÖ Telegram-–±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ Flask + PTB'

def get_main_menu():
    keyboard = [
        [InlineKeyboardButton("üìù –†–∞–∑–º–µ—Å—Ç–∏—Ç—å –ó–∞–∫–∞–∑", callback_data='create_order')],
        [InlineKeyboardButton("üîç –ù–∞–π—Ç–∏ –ó–∞–∫–∞–∑. –ö–∞—Ç–µ–≥–æ—Ä–∏–∏", callback_data='find_order')],
        [InlineKeyboardButton("üèó –†–µ—Å—É—Ä—Å—ã: –ê—Ä–µ–Ω–¥–∞. –ü—Ä–æ–∫–∞—Ç. –†–∞–±–æ—á–∏–µ.", callback_data='resources')],
        [InlineKeyboardButton("üíµ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞", callback_data='referral')],
        [InlineKeyboardButton("‚ùì –í–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã", callback_data='faq')],
        [InlineKeyboardButton("ü§ì –°–ª—É–∂–±–∞ –∑–∞–±–æ—Ç—ã", callback_data='support')],
    ]
    return InlineKeyboardMarkup(keyboard)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é:", reply_markup=get_main_menu())

async def handle_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    await query.edit_message_text(f"–í—ã –≤—ã–±—Ä–∞–ª–∏: {query.data}")

async def run_bot():
    token = os.getenv("BOT_TOKEN")
    if not token:
        print("‚ùå –ù–µ –∑–∞–¥–∞–Ω BOT_TOKEN")
        return

    app = Application.builder().token(token).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(handle_menu))

    print("ü§ñ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram-–±–æ—Ç–∞...")

    await app.initialize()
    await app.start()
    await app.updater.start_polling()

def run_flask():
    port = int(os.environ.get("PORT", 10000))
    web_app.run(host="0.0.0.0", port=port)

if __name__ == '__main__':
    # Flask –≤ —Ñ–æ–Ω–µ
    threading.Thread(target=run_flask).start()

    # Telegram-–±–æ—Ç –≤–Ω—É—Ç—Ä–∏ —Ç–µ–∫—É—â–µ–≥–æ loop
    asyncio.get_event_loop().create_task(run_bot())
    asyncio.get_event_loop().run_forever()
